name: CI/CD

on: push

jobs:
  test:
    name: Test
    runs-on: ubuntu-24.04
    services:
      mysql:
        image: mysql:5.7.29
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: register_architektury_test
        ports:
          - 3306
      elasticsearch:
        image: slovaknationalgallery/elasticsearch-webumenia:7.3.1
        env:
          discovery.type: single-node
        ports:
          - 9200
    steps:
    - uses: actions/checkout@v1
    - name: Get Composer Cache Directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"
    - name: Restore Composer cache
      uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
    - name: Restore npm cache
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - uses: shivammathur/setup-php@v2
      with:
        php-version: 7.4
        extensions: mbstring, bcmath, fileinfo, pdo_mysql
    - run: composer install --no-progress --no-interaction
    - run: npm install && npm run production
    - run: ./vendor/bin/phpunit
      env:
        APP_KEY: base64:HXaE/pTpPoSNdHFMl5SpgX2XKtdph3EjrdmvWFDKisE=
        DATABASE_URL: mysql://root:@127.0.0.1:${{ job.services.mysql.ports[3306] }}/register_architektury_test
        SCOUT_ELASTIC_HOST: 127.0.0.1:${{ job.services.elasticsearch.ports[9200] }}

  deploy:
    name: Deploy
    runs-on: ubuntu-24.04
    needs: [test]
    if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v1
    - uses: shivammathur/setup-php@v2
      with:
        php-version: 7.4
    - run: composer install --no-progress --no-interaction
    - uses: atymic/deployer-php-action@0.2.0
      with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
    - run: php artisan deploy
